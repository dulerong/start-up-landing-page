{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","alt","src","webformatURL","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","placeholder","onChange","event","target","value","type","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","then","res","json","data","hits","catch","err","console","log","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAsCeA,EApCG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACVC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACA,yBAAKC,UAAU,8CACb,yBAAKC,IAAI,GAAGC,IAAKL,EAAMM,aAAcH,UAAU,WAC/C,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0CAAf,cACcH,EAAMO,MAEpB,4BACE,4BACE,2CACCP,EAAMQ,OAET,4BACE,+CACCR,EAAMS,WAET,4BACE,2CACCT,EAAMU,SAIb,yBAAKP,UAAU,aACZF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACR,0BAAMC,IAAKD,EAAOV,UAAU,4FAA5B,IACIS,SCKCG,EAjCK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KAQpC,OACI,yBAAKhB,UAAU,kDACX,0BAAMA,UAAU,kBAAkBiB,SAPzB,SAACC,GACdA,EAAEC,iBACFN,EAAWE,KAMH,yBAAKf,UAAU,8DACX,2BAAOA,UAAU,wHAGTe,KAAK,OAAOK,YAAY,SACxBC,SAAU,SAACC,GAAD,OAAWN,EAAQM,EAAMC,OAAOC,UAClD,4BAAQxB,UAAU,wIAGVyB,KAAK,UAHb,cCeLC,MA9Bf,WAAgB,IAAD,EACeZ,mBAAS,IADxB,mBACNa,EADM,KACEC,EADF,OAEqBd,oBAAS,GAF9B,mBAENe,EAFM,KAEKC,EAFL,OAGWhB,mBAAS,IAHpB,mBAGNiB,EAHM,KAGAC,EAHA,KAeb,OAVAC,qBAAU,WACRC,MAAM,qEAAD,OAAsEH,EAAtE,sBACFI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJV,EAAUU,EAAKC,MACfT,GAAa,MAEdU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACV,IAGF,yBAAK/B,UAAU,qBACb,kBAAC,EAAD,CAAaa,WAAY,SAACE,GAAUiB,EAAQjB,MAE1Cc,GAA8B,GAAjBF,EAAOiB,OAAmC,GAArB,mBAEnCf,EAAY,iBAAmB,yBAAK7B,UAAU,0BAC5C2B,EAAOnB,KAAI,SAACX,EAAOa,GAAR,OACV,kBAAC,EAAD,CAAWC,IAAKD,EAAOb,MAAOA,U,KCtBxCgD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.46b9ef94.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ImageCard = ({image}) => { \r\n    const tags = image.tags.split(',')\r\n\r\n    return (\r\n    <div className='max-w-xs rounded overflow-hidden shadow-xl'>\r\n      <img alt='' src={image.webformatURL} className='w-full'/>\r\n      <div className='px-6 py-4'>\r\n        <div className='font-bold text-purple-500 text-xl mb-2'>\r\n          User Name: {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>         \r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>         \r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>         \r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className='px-6 py-4'>\r\n        {tags.map((tag, index) => (\r\n          <span key={index} className='inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2'>\r\n            #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ImageCard","import React, { useState } from 'react'\r\n\r\nconst ImageSearch = ({ searchText }) => {\r\n    const [text, setText] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        searchText(text)\r\n    }\r\n\r\n    return(\r\n        <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\r\n            <form className='w-full max-w-sm' onSubmit={onSubmit}>\r\n                <div className='flex items-center border-b border-b-2 border-teal-500 py-2'>\r\n                    <input className='appearance-none bg-transparent \r\n                                      border-none w-full text-gray-700 \r\n                                      mr-3 py-1 px-2 leading-tight focus:outline-none'\r\n                            text='text' placeholder='Search'\r\n                            onChange={(event) => setText(event.target.value)}/>\r\n                    <button className='flex-shrink-0 bg-teal-500 hover:bg-teal-700 \r\n                                        border-teal-500 hover:border-teal-700 text-sm \r\n                                        border-4 text-white py-1 px-2 rounded'\r\n                            type='submit'>\r\n                        Search\r\n                    </button>\r\n                    \r\n\r\n                </div>\r\n\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSearch","import React, {useState, useEffect} from 'react';\nimport ImageCard from './components/ImageCard'\nimport ImageSearch from './components/ImageSearch'\n\nfunction App() {\n  const [images, setImages] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [term, setTerm] = useState('')\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=16235203-07d9daff3004aa82d6bc9f766&q=${term}&image_type=photo`)\n      .then(res => res.json())\n      .then(data => {\n        setImages(data.hits)\n        setIsLoading(false)\n      })\n      .catch(err => console.log(err))\n  }, [term])\n\n  return (\n    <div className='container mx-auto'>\n      <ImageSearch searchText={(text) => {setTerm(text)}}/>\n\n      {!isLoading && images.length == 0 ? 'No images found!' : \"\"}\n\n      {isLoading ? 'Please wait...' : <div className='grid grid-cols-3 gap-4'>\n        {images.map((image, index) => (\n          <ImageCard key={index} image={image}/>\n        ))}\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/main.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}